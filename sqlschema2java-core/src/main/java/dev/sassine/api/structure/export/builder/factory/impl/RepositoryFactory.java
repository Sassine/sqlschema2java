package dev.sassine.api.structure.export.builder.factory.impl;

import static dev.sassine.api.structure.export.builder.function.ImportBeanFunction.importEntityClass;
import static dev.sassine.api.structure.export.builder.function.StoreClassFuncation.store;
import static dev.sassine.api.structure.type.TypeConverter.TYPE_INTEGER;
import static dev.sassine.api.structure.type.TypeConverter.TYPE_STRING;
import static dev.sassine.api.structure.type.TypeConverter.TYPE_UUID;
import static java.lang.reflect.Modifier.PUBLIC;
import static org.apache.logging.log4j.LogManager.getLogger;

import java.util.UUID;

import org.apache.logging.log4j.Logger;
import org.burningwave.core.classes.AnnotationSourceGenerator;
import org.burningwave.core.classes.ClassSourceGenerator;
import org.burningwave.core.classes.GenericSourceGenerator;
import org.burningwave.core.classes.TypeDeclarationSourceGenerator;
import org.burningwave.core.classes.UnitSourceGenerator;
import org.springframework.stereotype.Repository;

import dev.sassine.api.structure.export.builder.factory.Factory;
import dev.sassine.api.structure.model.java.EntityModel;

public class RepositoryFactory implements Factory {
	
	private static final Logger log = getLogger();
	
	private static final String PACKAGE_JPAREPOSITORY = "org.springframework.data.jpa.repository.JpaRepository";
	private static final String CLASSNAME_JPAREPOSITORY = "JpaRepository";
	private static final String DOT_REPOSITORY = ".repository";
	private static final String ENTITY_REPOSITORY = "EntityRepository";
	private static final String ENTITY = "Entity";
	
	@Override
	public void execute(EntityModel entityModel, boolean isAutoGenerated, String nameClass, String packageName) {
		log.debug("ClassName: ({}) - PackageName: ({}) ", nameClass, packageName);
		UnitSourceGenerator gen = this.buildPackage(packageName);
		log.debug("Package builded");
		ClassSourceGenerator interfaceClass = this.buildClassSource(entityModel, nameClass);
		log.debug("InterfaceRepository builded");
		importEntityClass(nameClass, packageName, gen);
		gen.addImport(PACKAGE_JPAREPOSITORY);
		gen.addClass(interfaceClass);
		store(gen);
		log.debug("Repository EntityClass ({}) stored", nameClass);
	}

	private ClassSourceGenerator buildClassSource(EntityModel entityModel, String nameClass) {
		return ClassSourceGenerator
				.createInterface(TypeDeclarationSourceGenerator.create(ENTITY_REPOSITORY))
				.expands(TypeDeclarationSourceGenerator.create(CLASSNAME_JPAREPOSITORY)
						.addGeneric(GenericSourceGenerator.create(nameClass.concat(ENTITY)))
						.addGeneric(GenericSourceGenerator.create(this.getIdClassType(entityModel))))
				.addModifier(PUBLIC)
				.addAnnotation(AnnotationSourceGenerator.create(Repository.class));
	}

	private UnitSourceGenerator buildPackage(String packageName) {
		return UnitSourceGenerator.create(packageName.concat(DOT_REPOSITORY));
	}

	private Class<?> getIdClassType(EntityModel entityModel) {
		String pkType = entityModel.getPkType();
		if (TYPE_STRING.equalsIgnoreCase(pkType))
			return String.class;
		else if (TYPE_UUID.equalsIgnoreCase(pkType))
			return UUID.class;
		else if (TYPE_INTEGER.equalsIgnoreCase(pkType))
			return Integer.class;
		else
			return Long.class;
	}

}
